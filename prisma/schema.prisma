// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int                @id @default(autoincrement())
  firstName String
  lastName  String
  userName  String
  email     String
  password  String
  sessions  Session[]
  trails    TrailsOnUsers[]
  questions QuestionsOnUsers[]
  createdAt DateTime           @default(now())
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Discipline {
  id        Int      @id @default(autoincrement())
  title     String   @unique
  trails    Trail[]
  createdAt DateTime @default(now())
}

model Trail {
  id           Int             @id @default(autoincrement())
  title        String          @unique
  image        String
  discipline   Discipline      @relation(fields: [disciplineId], references: [id])
  disciplineId Int
  users        TrailsOnUsers[]
  fields       Field[]
  createdAt    DateTime        @default(now())
}

model TrailsOnUsers {
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  trail     Trail    @relation(fields: [trailId], references: [id])
  trailId   Int
  status    Boolean  @default(false)
  createdAt DateTime @default(now())

  @@id([userId, trailId])
}

model Field {
  id         Int        @id @default(autoincrement())
  title      String
  image      String
  unitNumber Int
  trailId    Int
  trail      Trail      @relation(fields: [trailId], references: [id])
  subfields  Subfield[]
  createdAt  DateTime   @default(now())
}

model Subfield {
  id           Int      @id @default(autoincrement())
  title        String
  lessonNumber Int
  fieldId      Int
  field        Field    @relation(fields: [fieldId], references: [id])
  videos       Video[]
  createdAt    DateTime @default(now())
}

model Video {
  id            Int        @id @default(autoincrement())
  title         String
  videoAdress   String
  chapterNumber Int
  subfieldId    Int
  subfield      Subfield   @relation(fields: [subfieldId], references: [id])
  articles      Article[]
  questions     Question[]
  createdAt     DateTime   @default(now())
}

model Article {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  videoId   Int
  video     Video    @relation(fields: [videoId], references: [id])
  createdAt DateTime @default(now())
}

model Question {
  id        Int                @id @default(autoincrement())
  title     String
  statement String
  image     String?
  videoId   Int
  video     Video              @relation(fields: [videoId], references: [id])
  answers   Answer[]
  users     QuestionsOnUsers[]
  createdAt DateTime           @default(now())
}

model Answer {
  id         Int      @id @default(autoincrement())
  isCorrect  Boolean
  questionId Int
  question   Question @relation(fields: [questionId], references: [id])
}

model QuestionsOnUsers {
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  questionId Int
  question   Question @relation(fields: [questionId], references: [id])

  @@id([userId, questionId])
}
